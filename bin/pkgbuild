#!/bin/sh

set -e

pkgbuild_bootstrap() {
	TREESDIR=~schmonz/trees
	_prefix="/opt/pkg"
	_sysconfdir="/etc/pkg"
	echo ".include \"${_sysconfdir}/pkgbuild-shared.mk.conf\"" > /var/tmp/pkgbuild-fragment.mk.conf
	cd ${TREESDIR}/pkgsrc-cvs/bootstrap
	./bootstrap \
		--mk-fragment /var/tmp/pkgbuild-fragment.mk.conf \
		--workdir /var/tmp/pkgsrc-bootstrap \
		--varbase /var/pkg \
		--sysconfdir "${_sysconfdir}" \
		--sysconfbase /etc \
		--prefix "${_prefix}" \
		--prefer-pkgsrc yes \
		"$@"
	ln -s ${TREESDIR}/package-builders/etc/pkgbuild-shared.mk.conf "${_sysconfdir}"
	warn ""
	warn "=====> $(basename $0): ${_sysconfdir}/mk.conf:"
	warn "=====> keep only ABI, PKGSRC_COMPILER, TOOLS_PLATFORM.foo"
}

pkgbuild_isvm_dmesg_says_qemu() {
	(dmesg 2>/dev/null | grep -qi qemu) || (sudo dmesg 2>/dev/null | grep -qi qemu)
}

pkgbuild_isvm_var_adm_messages_says_qemu() {
	[ -f /var/adm/messages ] && grep -qi qemu /var/adm/messages
}

pkgbuild_isvm() {
	pkgbuild_isvm_dmesg_says_qemu && return 0
	pkgbuild_isvm_var_adm_messages_says_qemu && return 0
	[ "$#" -gt 0 ] && [ "$1" = "pkgvm" ] && return 0

	warn "'pkgvm' not specified"
	return 1
}

pkgbuild_make() {
	mk=mk/bsd.pkg.mk
	type bmake >/dev/null
	_has_bmake=$([ $? -eq 0 ] && echo yes)
	if [ "${_has_bmake}" ] && [ -f ../../$mk -o -f ../$mk -o -f $mk ]; then
		exec bmake "$@"
	elif [ -x /usr/bin/make ]; then
		exec /usr/bin/make "$@"
	else
		exec bmake "$@"
	fi
}

pkgbuild_mancompress() {
	for i in $(find /opt/pkg/man -type f ! -name '*.gz'); do
		pkg_info -Fe $i
	done | \
	sudo xargs pkg_admin set rebuild=YES
	pkg_rolling-replace -sv
}

pkgbuild_moretools() {
	# XXX make this generate a meta-package whose `install` target removes the generated files, leaving no trace
	# XXX or hand-write the meta-package into this repo, then this script symlinks it and unlinks it

	TREESDIR=~/trees

	# textproc/highlight, assuming gcc6 or higher
	MORETOOLS='security/mozilla-rootcerts-openssl
misc/tmux
devel/cvs-for-gits
textproc/p5-Text-Autoformat
textproc/p5-Text-Reform
textproc/the_silver_searcher
devel/myrepos
devel/scmcvs
devel/git-base
devel/mercurial
net/djbdns
net/rsync
editors/vim
misc/watch
shells/oksh
shells/mksh
www/links'

	cd ${TREESDIR}/pkgsrc-cvs
	for i in ${MORETOOLS}; do
		( cd $i && make install clean )
	done
}

pkgbuild_ncpus_sysctl() {
	sysctl -n hw.ncpu
}

pkgbuild_ncpus_psrinfo() {
	echo $(psrinfo | wc -l)
}

pkgbuild_ncpus_getconf() {
	getconf _NPROCESSORS_ONLN
}

pkgbuild_ncpus_default() {
	echo 1
}

pkgbuild_ncpus() {
	case $(uname) in
		Darwin)	pkgbuild_ncpus_sysctl	;;
		FreeBSD)pkgbuild_ncpus_sysctl	;;
		Linux)	pkgbuild_ncpus_getconf	;;
		NetBSD) pkgbuild_ncpus_sysctl	;;
		OpenBSD)pkgbuild_ncpus_sysctl	;;
		SunOS)	pkgbuild_ncpus_psrinfo	;;
		*)	pkgbuild_ncpus_default	;;
	esac
}

OPSYS="$(uname)"
SED=sed
CAT=cat
GREP=grep
ECHO=echo
HEAD=head

pkgbuild_platform_linux() {
	if [ -x /usr/bin/lsb_release ]; then
		lsb_release -sd | ${SED} -e 's|^"||' -e 's|"$||' -e 's| Linux release||g' -e 's| (.\+)$||' -e 's|||g' -e 's|GNU/Linux ||' -e 's| |-|g'
	elif [ -f /etc/gentoo-release ]; then
		${CAT} /etc/gentoo-release | ${SED} -e 's| .* |-|'
	elif [ -f /etc/os-release ]; then
		${CAT} /etc/os-release | ${GREP} ^PRETTY_NAME= | ${SED} -e 's|^.*="||' -e 's|"$||' -e 's|Linux v||' -e 's| |-|g'
	else
		${ECHO} UnknownLinux-x.x
	fi
}

pkgbuild_platform_darwin() {
	${ECHO} macOS-"$(sw_vers --productVersion)"
}

pkgbuild_platform_freebsd() {
	uname -rs | ${SED} -e 's| |-|g'
}

pkgbuild_platform_sunos() {
	if [ -f /etc/product ]; then # SmartOS
		${ECHO} $(${HEAD} -1 /etc/release | ${AWK} '{print $1}')-$(${GREP} '^Image:' < /etc/product | ${AWK} '{print $3}')
	else
		${HEAD} -1 /etc/release | ${SED} -e 's|.*Oracle ||g' -e 's| X86$||' -e 's| |-|g'
	fi
}

pkgbuild_platform_generic() {
	uname -rs | ${SED} -e 's| |-|g'
}

pkgbuild_platform() {
	case "${OPSYS}" in
		Linux)	pkgbuild_platform_linux	;;
		Darwin)	pkgbuild_platform_darwin	;;
		FreeBSD)pkgbuild_platform_freebsd;;
		SunOS)	pkgbuild_platform_sunos	;;
		*)	pkgbuild_platform_generic;;
	esac
}

pkgbuild_shutdown() {
	_myname=$(hostname | cut -d. -f1)

	if ! pkgbuild isvm; then
		echo >&2 "${_myname}: might be host, not shutting down"
		exit 5
	fi

	echo >&2 "${_myname}: shutting down"
	case "$(uname)" in
	Darwin|Linux)
		if [ -f /etc/alpine-release ]; then
			sudo poweroff
		else
			sudo shutdown -h now
		fi
		exit 0
		;;
	NetBSD|OpenBSD)
		sudo shutdown -hp now
		exit 0
		;;
	FreeBSD)
		sudo shutdown -p now
		exit 0
		;;
	SunOS)
		sudo shutdown -y -i 5 -g 0
		exit 0
		;;
	esac
}

pkgbuild_usage() {
	warn "$(basename "$0") bootstrap|isvm|make|mancompress|moretools|ncpus|platform|shutdown"
}

warn() {
	echo >&2 "$@"
}

main() {
	[ $# -ge 1 ] || pkgbuild_usage
	arg="$1"; shift
	case "${arg}" in
		bootstrap)	pkgbuild_bootstrap	"$@"	;;
		isvm)		pkgbuild_isvm		"$@"	;;
		make)		pkgbuild_make		"$@"	;;
		mancompress)	pkgbuild_mancompress	"$@"	;;
		moretools)	pkgbuild_moretools	"$@"	;;
		ncpus)		pkgbuild_ncpus		"$@"	;;
		platform)	pkgbuild_platform	"$@"	;;
		shutdown)	pkgbuild_shutdown	"$@"	;;
		*)		pkgbuild_usage		"$@"	;;
	esac
	return $?
}

main "$@"
exit $?
