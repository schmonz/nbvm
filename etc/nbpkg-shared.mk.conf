.if defined(ABI) && ${MACHINE_ARCH:C/${ABI}$//} == ${MACHINE_ARCH}
NBPKG_BITNESS=		-${ABI}
.else
NBPKG_BITNESS=
.endif
NBPKG_COMPILER?=	${CC_VERSION:C/ .*//W}
NBPKG_PREFIX=		${LOCALBASE:C/^\///:C/\//-/g}

NBPKG_PLATFORM_cmd=	nbpkg platform
NBPKG_PLATFORM=		${NBPKG_PLATFORM_cmd:sh}-${MACHINE_ARCH}${NBPKG_BITNESS}-${NBPKG_COMPILER}-${NBPKG_PREFIX}
# XXX can we also build to this physical prefix?

# per-package build concurrency
MAKE_JOBS_DEFAULT_cmd=	nbvm ncpus
MAKE_JOBS_DEFAULT?=	${MAKE_JOBS_DEFAULT_cmd:sh}
MAKE_JOBS=		${PKG_MAKE_JOBS.${PKGPATH}:U${MAKE_JOBS_DEFAULT}}

# hardening options
PKG_FORTIFY_DEFAULT=	strong
PKGSRC_USE_FORTIFY=	${PKG_FORTIFY.${PKGPATH}:U${PKG_FORTIFY_DEFAULT}}

PKG_STACKCHECK_DEFAULT=	yes
PKGSRC_USE_STACK_CHECK=	${PKG_STACKCHECK.${PKGPATH}:U${PKG_STACKCHECK_DEFAULT}}

# bootstrap settings
LOCALBASE?=		/opt/pkg
VARBASE?=		/var/pkg
PKG_SYSCONFBASE?=	/etc/pkg
PKG_DBDIR=		${LOCALBASE}/pkgdb
PKG_TOOLS_BIN=		${LOCALBASE}/sbin
PKGINFODIR=		info
PKGMANDIR=		man
PREFER_PKGSRC=		yes

.if exists(${LOCALBASE}/bin/fetch)
FETCH_USING=		fetch
.endif
PKG_OPTIONS.libfetch+=	openssl

# license
ACCEPTABLE_LICENSES+=	gnu-agpl-v3 vim-license ruby-license

# build actions
PACKAGES=		${PKGSRCDIR}/packages/${NBPKG_PLATFORM}
.if exists(/private)	# WRKOBJDIR must not contain any symlinks
WRKOBJDIR?=		/private/var/tmp/pkgsrc/obj
.else
WRKOBJDIR?=		/var/tmp/pkgsrc/obj
.endif
CREATE_WRKDIR_SYMLINK=	yes
# XXX also wanna test that we're actively trying to build shlock or its dependencies right now;
# XXX otherwise bail if shlock isn't present
.if empty(.CURDIR:M*pkgtools/shlock) && exists(${LOCALBASE}/bin/shlock)
PKG_DEVELOPER=		yes
OBJHOSTNAME=		# defined
WRKDIR_LOCKTYPE=	once
LOCALBASE_LOCKTYPE=	sleep
.endif
DEPENDS_TARGET=		install clean
UPDATE_TARGET=		install clean
.if exists(${LOCALBASE}/bin/sudo) || exists(/usr/bin/sudo)
SU_CMD=			sudo -E ${SH} -c
.endif

# build options
PKG_RCD_SCRIPTS=	yes
MANZ=			YES
PKG_DEFAULT_OPTIONS+=	-x11 -xcb -gssapi -kerberos
PKG_OPTIONS.gcc6+=	always-libgcc
PKG_OPTIONS.gcc7+=	always-libgcc
PKG_OPTIONS.gcc8+=	always-libgcc
PKG_OPTIONS.gcc9+=	always-libgcc
PKG_OPTIONS.gcc10+=	always-libgcc
PKG_OPTIONS.gcc12+=	always-libgcc
PKG_OPTIONS.gcc13+=	always-libgcc
PKG_OPTIONS.gcc14+=	always-libgcc
PKG_OPTIONS.ikiwiki+=	cvs git mercurial ikiwiki-amazon-s3 ikiwiki-highlight ikiwiki-search imagemagick l10n python w3m
